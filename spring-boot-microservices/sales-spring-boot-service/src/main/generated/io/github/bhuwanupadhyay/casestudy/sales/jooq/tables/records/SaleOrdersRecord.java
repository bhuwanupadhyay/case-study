/*
 * This file is generated by jOOQ.
 */
package io.github.bhuwanupadhyay.casestudy.sales.jooq.tables.records;


import io.github.bhuwanupadhyay.casestudy.sales.jooq.tables.SaleOrders;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SaleOrdersRecord extends UpdatableRecordImpl<SaleOrdersRecord> implements Record6<Long, String, String, String, String, LocalDateTime> {

    private static final long serialVersionUID = 867271589;

    /**
     * Setter for <code>public.sale_orders.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.sale_orders.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.sale_orders.order_id</code>.
     */
    public void setOrderId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.sale_orders.order_id</code>.
     */
    public String getOrderId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.sale_orders.customer_id</code>.
     */
    public void setCustomerId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.sale_orders.customer_id</code>.
     */
    public String getCustomerId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.sale_orders.status</code>.
     */
    public void setStatus(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.sale_orders.status</code>.
     */
    public String getStatus() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.sale_orders.cancellation_reason</code>.
     */
    public void setCancellationReason(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.sale_orders.cancellation_reason</code>.
     */
    public String getCancellationReason() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.sale_orders.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.sale_orders.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, String, String, String, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, String, String, String, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return SaleOrders.SALE_ORDERS.ID;
    }

    @Override
    public Field<String> field2() {
        return SaleOrders.SALE_ORDERS.ORDER_ID;
    }

    @Override
    public Field<String> field3() {
        return SaleOrders.SALE_ORDERS.CUSTOMER_ID;
    }

    @Override
    public Field<String> field4() {
        return SaleOrders.SALE_ORDERS.STATUS;
    }

    @Override
    public Field<String> field5() {
        return SaleOrders.SALE_ORDERS.CANCELLATION_REASON;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return SaleOrders.SALE_ORDERS.CREATED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getOrderId();
    }

    @Override
    public String component3() {
        return getCustomerId();
    }

    @Override
    public String component4() {
        return getStatus();
    }

    @Override
    public String component5() {
        return getCancellationReason();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getOrderId();
    }

    @Override
    public String value3() {
        return getCustomerId();
    }

    @Override
    public String value4() {
        return getStatus();
    }

    @Override
    public String value5() {
        return getCancellationReason();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedAt();
    }

    @Override
    public SaleOrdersRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public SaleOrdersRecord value2(String value) {
        setOrderId(value);
        return this;
    }

    @Override
    public SaleOrdersRecord value3(String value) {
        setCustomerId(value);
        return this;
    }

    @Override
    public SaleOrdersRecord value4(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public SaleOrdersRecord value5(String value) {
        setCancellationReason(value);
        return this;
    }

    @Override
    public SaleOrdersRecord value6(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public SaleOrdersRecord values(Long value1, String value2, String value3, String value4, String value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SaleOrdersRecord
     */
    public SaleOrdersRecord() {
        super(SaleOrders.SALE_ORDERS);
    }

    /**
     * Create a detached, initialised SaleOrdersRecord
     */
    public SaleOrdersRecord(Long id, String orderId, String customerId, String status, String cancellationReason, LocalDateTime createdAt) {
        super(SaleOrders.SALE_ORDERS);

        set(0, id);
        set(1, orderId);
        set(2, customerId);
        set(3, status);
        set(4, cancellationReason);
        set(5, createdAt);
    }
}
