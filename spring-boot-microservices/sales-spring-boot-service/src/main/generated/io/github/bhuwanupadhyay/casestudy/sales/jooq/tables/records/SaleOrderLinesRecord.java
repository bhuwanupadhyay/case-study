/*
 * This file is generated by jOOQ.
 */
package io.github.bhuwanupadhyay.casestudy.sales.jooq.tables.records;


import io.github.bhuwanupadhyay.casestudy.sales.jooq.tables.SaleOrderLines;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SaleOrderLinesRecord extends UpdatableRecordImpl<SaleOrderLinesRecord> implements Record4<Long, String, String, Integer> {

    private static final long serialVersionUID = 1795002870;

    /**
     * Setter for <code>public.sale_order_lines.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.sale_order_lines.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.sale_order_lines.order_id</code>.
     */
    public void setOrderId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.sale_order_lines.order_id</code>.
     */
    public String getOrderId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.sale_order_lines.item_id</code>.
     */
    public void setItemId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.sale_order_lines.item_id</code>.
     */
    public String getItemId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.sale_order_lines.quantity</code>.
     */
    public void setQuantity(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.sale_order_lines.quantity</code>.
     */
    public Integer getQuantity() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, String, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return SaleOrderLines.SALE_ORDER_LINES.ID;
    }

    @Override
    public Field<String> field2() {
        return SaleOrderLines.SALE_ORDER_LINES.ORDER_ID;
    }

    @Override
    public Field<String> field3() {
        return SaleOrderLines.SALE_ORDER_LINES.ITEM_ID;
    }

    @Override
    public Field<Integer> field4() {
        return SaleOrderLines.SALE_ORDER_LINES.QUANTITY;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getOrderId();
    }

    @Override
    public String component3() {
        return getItemId();
    }

    @Override
    public Integer component4() {
        return getQuantity();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getOrderId();
    }

    @Override
    public String value3() {
        return getItemId();
    }

    @Override
    public Integer value4() {
        return getQuantity();
    }

    @Override
    public SaleOrderLinesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public SaleOrderLinesRecord value2(String value) {
        setOrderId(value);
        return this;
    }

    @Override
    public SaleOrderLinesRecord value3(String value) {
        setItemId(value);
        return this;
    }

    @Override
    public SaleOrderLinesRecord value4(Integer value) {
        setQuantity(value);
        return this;
    }

    @Override
    public SaleOrderLinesRecord values(Long value1, String value2, String value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SaleOrderLinesRecord
     */
    public SaleOrderLinesRecord() {
        super(SaleOrderLines.SALE_ORDER_LINES);
    }

    /**
     * Create a detached, initialised SaleOrderLinesRecord
     */
    public SaleOrderLinesRecord(Long id, String orderId, String itemId, Integer quantity) {
        super(SaleOrderLines.SALE_ORDER_LINES);

        set(0, id);
        set(1, orderId);
        set(2, itemId);
        set(3, quantity);
    }
}
